


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Elgin Allen
    3 00000000         ; Date Created: 2/14/2017
    4 00000000         ; Last Modified: 2/27/2017
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 8 Hz and a varying duty-cycle
    7 00000000         ;   Repeat the functionality from Lab2-3 but now we want
                        you to 
    8 00000000         ;   insert debugging instruments which gather data (stat
                       e and timing)
    9 00000000         ;   to verify that the system is functioning as expected
                       .
   10 00000000         ; Hardware connections (External: One button and one LED
                       )
   11 00000000         ;  PE1 is Button input  (1 means pressed, 0 means not pr
                       essed)
   12 00000000         ;  PE0 is LED output (1 activates external LED on protob
                       oard)
   13 00000000         ;  PF2 is Blue LED on Launchpad used as a heartbeat
   14 00000000         ; Instrumentation data to be gathered is as follows:
   15 00000000         ; After Button(PE1) press collect one state and time ent
                       ry. 
   16 00000000         ; After Buttin(PE1) release, collect 7 state and
   17 00000000         ; time entries on each change in state of the LED(PE0): 
                       
   18 00000000         ; An entry is one 8-bit entry in the Data Buffer and one
                        
   19 00000000         ; 32-bit entry in the Time Buffer
   20 00000000         ;  The Data Buffer entry (byte) content has:
   21 00000000         ;    Lower nibble is state of LED (PE0)
   22 00000000         ;    Higher nibble is state of Button (PE1)
   23 00000000         ;  The Time Buffer entry (32-bit) has:
   24 00000000         ;    24-bit value of the SysTick's Current register (NVI
                       C_ST_CURRENT_R)
   25 00000000         ; Note: The size of both buffers is 50 entries. Once you
                        fill these
   26 00000000         ;       entries you should stop collecting data
   27 00000000         ; The heartbeat is an indicator of the running of the pr
                       ogram. 
   28 00000000         ; On each iteration of the main loop of your program tog
                       gle the 
   29 00000000         ; LED to indicate that your code(system) is live (not st
                       uck or dead).
   30 00000000         
   31 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   32 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   33 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   34 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   35 00000000         
   36 00000000 400253FC 
                       GPIO_PORTF_DATA_R



ARM Macro Assembler    Page 2 


                               EQU              0x400253FC
   37 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   38 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   39 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   40 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   41 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   42 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   43 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   44 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   45 00000000         
   46 00000000 E000E010 
                       NVIC_ST_CTRL_R
                               EQU              0xE000E010
   47 00000000 E000E014 
                       NVIC_ST_RELOAD_R
                               EQU              0xE000E014
   48 00000000 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
   49 00000000         ; RAM Area
   50 00000000                 AREA             DATA, ALIGN=2
   51 00000000         ;-UUU-Declare  and allocate space for your Buffers 
   52 00000000         ;    and any variables (like pointers and counters) here
                       
   53 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    DataBuffer
                               SPACE            50          ;each enty is 1 byt
                                                            e/8B



ARM Macro Assembler    Page 3 


   54 00000032 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    TimeBuffer
                               SPACE            200         ; each entry is 4 b
                                                            ytes/32B
   55 000000FA 00 00 00 
              00       DataPt  SPACE            4           ; Addresses are 32B
                                                            
   56 000000FE 00 00 00 
              00       TimePt  SPACE            4           ;Addresses are 32B
   57 00000102 00      NEntries
                               FILL             1,0,1
   58 00000103         ; ROM Area
   59 00000103                 IMPORT           TExaS_Init
   60 00000103                 IMPORT           SysTick_Init
   61 00000103         ;-UUU-Import routine(s) from other assembly files (like 
                       SysTick.s) here
   62 00000103                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   63 00000000                 THUMB
   64 00000000                 EXPORT           Start
   65 00000000         
   66 00000000         
   67 00000000         
   68 00000000         Start
   69 00000000         ; TExaS_Init sets bus clock at 80 MHz
   70 00000000 F7FF FFFE       BL               TExaS_Init  ; voltmeter, scope 
                                                            on PD3
   71 00000004 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
   72 00000006 49A5            LDR              R1, =SYSCTL_RCGCGPIO_R ;1) acti
                                                            vate clock for Port
                                                             F and E
   73 00000008 6808            LDR              R0, [R1]
   74 0000000A F040 0030       ORR              R0, R0, #0x30 ;set bit 4,5 to t
                                                            urn on clock
   75 0000000E 6008            STR              R0, [R1]
   76 00000010 BF00            NOP
   77 00000012 BF00            NOP                          ;allow time for clo
                                                            ck to finish
   78 00000014 49A2            LDR              R1, =GPIO_PORTF_LOCK_R
   79 00000016 48A3            LDR              R0, =0x4C4F434B
   80 00000018 6008            STR              R0, [R1]
   81 0000001A 49A1            LDR              R1, =GPIO_PORTF_LOCK_R
   82 0000001C 6808            LDR              R0, [R1]
   83 0000001E 49A2            LDR              R1, =GPIO_PORTF_PCTL_R
   84 00000020 6008            STR              R0, [R1]
   85 00000022 49A2            LDR              R1, =GPIO_PORTF_CR_R
   86 00000024 F647 70FF       MOV              R0, #0x7FFF
   87 00000028 6008            STR              R0, [R1]
   88 0000002A 49A1            LDR              R1, =GPIO_PORTF_DIR_R ;5) set d
                                                            irection register
   89 0000002C 6808            LDR              R0, [R1]



ARM Macro Assembler    Page 5 


   90 0000002E F04F 0004       MOV              R0, #0x04   ;set all pins as in
                                                            puts
   91 00000032 6008            STR              R0, [R1]
   92 00000034 499F            LDR              R1, =GPIO_PORTF_DEN_R ;7) enabl
                                                            e Port F digital po
                                                            rt
   93 00000036 6808            LDR              R0, [R1]
   94 00000038 F04F 001F       MOV              R0, #0x1F   ;1 means enable dig
                                                            ital I/O
   95 0000003C 6008            STR              R0, [R1]
   96 0000003E 499E            LDR              R1, =GPIO_PORTF_AFSEL_R
   97 00000040 6809            LDR              R1, [R1]
   98 00000042 F000 0000       AND              R0, R0, #0x00
   99 00000046 6008            STR              R0, [R1]
  100 00000048 499C            LDR              R1, =GPIO_PORTF_PUR_R ;pull-up 
                                                            resistors for PF4
  101 0000004A F04F 0010       MOV              R0, #0x10   ;enable weak pull-u
                                                            p on PF4
  102 0000004E 6008            STR              R0, [R1]
  103 00000050         
  104 00000050         
  105 00000050         
  106 00000050 499B            LDR              R1, =GPIO_PORTE_DIR_R ;5) set d
                                                            irection register
  107 00000052 6808            LDR              R0, [R1]
  108 00000054 F04F 0001       MOV              R0, #0x1    ;set pins 3-1 input
                                                            , pin 0 as output
  109 00000058 6008            STR              R0, [R1]
  110 0000005A 499A            LDR              R1, =GPIO_PORTE_DEN_R ;7) enabl
                                                            e Port E digital po
                                                            rt
  111 0000005C 6808            LDR              R0, [R1]
  112 0000005E F04F 001B       MOV              R0, #0x1B   ;1 means enable dig
                                                            ital I/O
  113 00000062 6008            STR              R0, [R1]
  114 00000064 4998            LDR              R1, =GPIO_PORTE_AFSEL_R
  115 00000066 6809            LDR              R1, [R1]
  116 00000068 F000 0000       AND              R0, R0, #0x00
  117 0000006C 6008            STR              R0, [R1]
  118 0000006E F04F 0A00       MOV              R10, #0
  119 00000072 F04F 0B05       MOV              R11, #5     ;PERIOD
  120 00000076 F04F 0C01       MOV              R12, #1     ;DUTY CYCLE
  121 0000007A F000 F8C7       BL               Debug_Init
  122 0000007E         loop
  123 0000007E 4993            LDR              R1, =GPIO_PORTF_DATA_R
  124 00000080 680A            LDR              R2, [R1]
  125 00000082 F002 0204       AND              R2, R2, #0x04
  126 00000086 F082 0204       EOR              R2, R2, #0X04
  127 0000008A 600A            STR              R2, [R1]
  128 0000008C         
  129 0000008C         
  130 0000008C 498F            LDR              R1, =GPIO_PORTF_DATA_R
  131 0000008E 680A            LDR              R2, [R1]
  132 00000090 F002 0210       AND              R2, R2, #0x10
  133 00000094 F000 0000       AND              R0, #0      ;CLEAR R0
  134 00000098 4282            CMP              R2, R0
  135 0000009A D03D            BEQ              breathe
  136 0000009C 4581            CMP              R9, R0
  137 0000009E DC01            BGT              noduty



ARM Macro Assembler    Page 6 


  138 000000A0 F000 F86C       BL               toggleLightOn
  139 000000A4         noduty
  140 000000A4 4460            ADD              R0, R12, R0 ;R0=DUTY
  141 000000A6 F000 F893       BL               delay
  142 000000AA F000 F891       BL               delay
  143 000000AE EBAB 000C       SUB              R0, R11, R12 ;R0=PERIOD-DUTY
  144 000000B2 F001 0100       AND              R1, R1, #0
  145 000000B6 4288            CMP              R0, R1
  146 000000B8 D001            BEQ              fullcycle
  147 000000BA F000 F876       BL               toggleLightOff
  148 000000BE         fullcycle
  149 000000BE F000 F887       BL               delay
  150 000000C2 F000 F885       BL               delay
  151 000000C6 4982            LDR              R1, =GPIO_PORTE_DATA_R 
                                                            ;CHECKING SWITCH 
  152 000000C8 6808            LDR              R0, [R1]
  153 000000CA F000 0202       AND              R2, R0, #0x02
  154 000000CE F04F 0000       MOV              R0, #0      ;CREATING CONSTANT 
                                                            FOR COMPARING
  155 000000D2 4282            CMP              R2, R0      ;CHECKING SWITCH ST
                                                            ATE
  156 000000D4 D008            BEQ              notPressed
  157 000000D6 F009 0900       AND              R9, R9, #0
  158 000000DA F006 0600       AND              R6, R6, #0  ;CLEAR R6
  159 000000DE F106 0601       ADD              R6, R6, #1  ;INDICATES SWITCH H
                                                            AS BEEN PRESSED
  160 000000E2 F108 0801       ADD              R8, R8, #1
  161 000000E6         ;CMP R8, #0
  162 000000E6         ;BEQ DontCap
  163 000000E6         ;BL Debug_Capture
  164 000000E6         ;SUB R8, R8, #1
  165 000000E6         ;DontCap 
  166 000000E6 E7CA            B                loop
  167 000000E8         notPressed
  168 000000E8 F008 0800       AND              R8, R8, #0
  169 000000EC F005 0500       AND              R5, R5, #0  ;CLEAR R5
  170 000000F0 42AE            CMP              R6, R5      ;CHECK IF SWITCH HA
                                                            S BEEN PRESSED
  171 000000F2 D0C4            BEQ              loop
  172 000000F4 F04F 0A07       MOV              R10, #7
  173 000000F8 45E3            CMP              R11, R12    ;CHECKS IF DUTY=PER
                                                            IOD
  174 000000FA D004            BEQ              reset
  175 000000FC F10C 0C01       ADD              R12, R12, #1 ;IF NOT INCREASE D
                                                            UTY (20%)
  176 00000100 F006 0600       AND              R6, R6, #0
  177 00000104 E7BB            B                loop
  178 00000106         reset
  179 00000106 F00C 0C00       AND              R12, R12, #0 ;RESETS DUTY TO 0%
                                                            
  180 0000010A F006 0600       AND              R6, R6, #0
  181 0000010E F009 0900       AND              R9, R9, #0
  182 00000112 F109 0901       ADD              R9, R9, #1
  183 00000116 E7B2            B                loop
  184 00000118         breathe
  185 00000118 E92D 1881       PUSH             {R12, R7, R0, R11}
  186 0000011C F04F 0B0A       MOV              R11, #10
  187 00000120 F04F 0700       MOV              R7, #0      ;SET COUNTER TO 0
  188 00000124 F04F 0A00       MOV              R10, #0     ;UP/DOWN INDICATOR 



ARM Macro Assembler    Page 7 


                                                            (0 UP, 1 DOWN)
  189 00000128 F04F 0100       MOV              R1, #0      ;0 CONSTANT FOR COM
                                                            PARING
  190 0000012C         breathe1
  191 0000012C F000 F826       BL               toggleLightOn
  192 00000130 4460            ADD              R0, R12, R0 ;R0=DUTY
  193 00000132 F000 F84D       BL               delay
  194 00000136 F000 F838       BL               toggleLightOff
  195 0000013A EBAB 000C       SUB              R0, R11, R12 ;R0=PERIOD-DUTY
  196 0000013E F000 F847       BL               delay
  197 00000142 458A            CMP              R10, R1     ;increment or decre
                                                            ment (up/down indic
                                                            ator)
  198 00000144 D002            BEQ              increment   ;if R10==0
  199 00000146 F10C 3CFF       ADD              R12, R12, #-1 ;decrement
  200 0000014A E001            B                skp
  201 0000014C         increment
  202 0000014C F10C 0C01       ADD              R12, R12, #1
  203 00000150         skp
  204 00000150 45DC            CMP              R12, R11    ;are we at top?
  205 00000152 D002            BEQ              top
  206 00000154 458C            CMP              R12, R1     ;are we at bottom?
  207 00000156 D003            BEQ              bottom
  208 00000158 E005            B                fin
  209 0000015A         top
  210 0000015A F04F 0A01       MOV              R10, #1     ;set up/down indica
                                                            tor to down directi
                                                            on (1)
  211 0000015E E002            B                fin
  212 00000160         bottom
  213 00000160 F04F 0A00       MOV              R10, #0     ;set up/down indica
                                                            tor to up direction
                                                             (0)
  214 00000164 E7FF            B                fin
  215 00000166         fin
  216 00000166 4959            LDR              R1, =GPIO_PORTF_DATA_R ;check i
                                                            f button is still p
                                                            ressed
  217 00000168 680A            LDR              R2, [R1]
  218 0000016A F002 0210       AND              R2, R2, #0x10
  219 0000016E F000 0000       AND              R0, #0      ;CLEAR R0
  220 00000172 4282            CMP              R2, R0
  221 00000174 D0DA            BEQ              breathe1
  222 00000176 E8BD 1881       POP              {R12, R7, R0, R11}
  223 0000017A E780            B                loop
  224 0000017C         
  225 0000017C         
  226 0000017C         toggleLightOn
  227 0000017C B507            PUSH             {R0, R1, R2, LR}
  228 0000017E 4954            LDR              R1, =GPIO_PORTE_DATA_R
  229 00000180 6808            LDR              R0, [R1]
  230 00000182 F040 0001       ORR              R0, R0, #0x01 ;SETTING PE0 TO 1
                                                            
  231 00000186 6008            STR              R0, [R1]    ;STORES NEW DATAREG
                                                            
  232 00000188 F1B8 0F01       CMP              R8, #1
  233 0000018C D103            BNE              NoCNo
  234 0000018E F000 F860       BL               Debug_Capture
  235 00000192 F06F 08F9       MOV              R8, #-250



ARM Macro Assembler    Page 8 


  236 00000196         NoCNo
  237 00000196 F1BA 0F00       CMP              R10, #0
  238 0000019A D003            BEQ              nocap
  239 0000019C F000 F859       BL               Debug_Capture
  240 000001A0 F1AA 0A01       SUB              R10, R10, #1
  241 000001A4         nocap
  242 000001A4 E8BD 4007       POP              {R0, R1, R2, LR}
  243 000001A8 4770            BX               LR
  244 000001AA         
  245 000001AA         toggleLightOff
  246 000001AA B507            PUSH             {R0, R1, R2, LR}
  247 000001AC         
  248 000001AC 4948            LDR              R1, =GPIO_PORTE_DATA_R
  249 000001AE 6808            LDR              R0, [R1]
  250 000001B0 F000 00FE       AND              R0, R0, #0xFE ;SETTING PE0 TO 0
                                                            
  251 000001B4 6008            STR              R0, [R1]    ;STORES NEW DATAREG
                                                            
  252 000001B6 F1B8 0F00       CMP              R8, #0
  253 000001BA D106            BNE              nocap1
  254 000001BC F1BA 0F00       CMP              R10, #0
  255 000001C0 D003            BEQ              nocap1
  256 000001C2 F000 F846       BL               Debug_Capture
  257 000001C6 F1AA 0A01       SUB              R10, R10, #1
  258 000001CA         nocap1
  259 000001CA E8BD 4007       POP              {R0, R1, R2, LR}
  260 000001CE 4770            BX               LR
  261 000001D0         
  262 000001D0         delay
  263 000001D0 B507            PUSH             {LR, R1, R0, R2}
  264 000001D2         ;MOV R2, #40
  265 000001D2         ;MUL R0, R0, R2
  266 000001D2         while
  267 000001D2 F04F 0100       MOV              R1, #0      ;CLEAR R1
  268 000001D6 F000 F807       BL               sub1
  269 000001DA F100 30FF       ADD              R0, #-1     ;DECREMTENTS WHILE 
                                                            LOOP INDICATOR
  270 000001DE 4288            CMP              R0, R1
  271 000001E0 DCF7            BGT              while       ;REPEATS EACH 1/5 O
                                                            F THE DUTY CYCLE
  272 000001E2 E8BD 4007       POP              {LR, R1, R0, R2}
  273 000001E6 4770            BX               LR
  274 000001E8         
  275 000001E8         
  276 000001E8         
  277 000001E8         
  278 000001E8         sub1                                 ;DELAYS FOR 1/80th 
                                                            OF PERIOD
  279 000001E8 B403            PUSH             {R0,R1}
  280 000001EA F24F 4024       MOV              R0,#0xF424  ;SETS R0 TO ARBIRTR
                                                            ARY CONSTANT WHICH 
                                                            WE FOUND WITH TRIAL
                                                             AND ERROR
  281 000001EE 4601            MOV              R1, R0      ;SETS R1 TO R0
  282 000001F0         wait
  283 000001F0 1E40            SUBS             R0,R0,#0x01 ;DELAYS FOR A VERY 
                                                            SMALL AMOUNT OF TIM
                                                            E
  284 000001F2 D1FD            BNE              wait



ARM Macro Assembler    Page 9 


  285 000001F4         wait1
  286 000001F4 1E49            SUBS             R1,R1,#0x01
  287 000001F6 D1FD            BNE              wait1
  288 000001F8 F24F 4024       MOV              R0,#0xF424
  289 000001FC 4601            MOV              R1, R0
  290 000001FE         wait2
  291 000001FE 1E40            SUBS             R0,R0,#0x01
  292 00000200 D1FD            BNE              wait2
  293 00000202         wait3
  294 00000202 1E49            SUBS             R1,R1,#0x01
  295 00000204 D1FD            BNE              wait3
  296 00000206 4601            MOV              R1, R0
  297 00000208 BC03            POP              {R0, R1}
  298 0000020A 4770            BX               LR
  299 0000020C         
  300 0000020C         
  301 0000020C         Debug_Init
  302 0000020C E92D 470F       PUSH             {R0, R1, R2, R3, R8, R9, LR, R1
0}
  303 00000210 4830            LDR              R0, =DataBuffer
  304 00000212 4931            LDR              R1, =TimeBuffer
  305 00000214 F04F 0332       MOV              R3, #50     ;Loop counter
  306 00000218         ClearLoop
  307 00000218 2B00            CMP              R3, #0      ;Check if at end of
                                                             array
  308 0000021A D00F            BEQ              ExitClear
  309 0000021C         
  310 0000021C F04F 08FF       MOV              R8, #0xFF   ;set current Data a
                                                            rray value to FF
  311 00000220 F8C0 8000       STR              R8, [R0]
  312 00000224         
  313 00000224 F04F 39FF       MOV              R9, #0xFFFFFFFF ;set current Ti
                                                            me array value to 8
                                                             Fs
  314 00000228 F8C1 9000       STR              R9, [R1]
  315 0000022C         
  316 0000022C F100 0001       ADD              R0, R0, #1  ;Move to next value
                                                             in Data array
  317 00000230 F101 0104       ADD              R1, R1, #4  ;Move to next value
                                                             in TIme Array
  318 00000234 F1A3 0301       SUB              R3, R3, #1
  319 00000238 F7FF FFEE       BL               ClearLoop
  320 0000023C         ExitClear
  321 0000023C         
  322 0000023C 4825            LDR              R0, =DataBuffer
  323 0000023E 4927            LDR              R1, =DataPt
  324 00000240 6008            STR              R0, [R1]    ;Set pointer at sta
                                                            rt of array
  325 00000242         
  326 00000242 4825            LDR              R0, =TimeBuffer
  327 00000244 4926            LDR              R1, =TimePt
  328 00000246 6008            STR              R0, [R1]    ;Set pointer at sta
                                                            rt of array
  329 00000248         
  330 00000248 F7FF FFFE       BL               SysTick_Init
  331 0000024C E8BD 470F       POP              {R0, R1, R2, R3, R8, R9, LR, R1
0}
  332 00000250 4770            BX               LR
  333 00000252         



ARM Macro Assembler    Page 10 


  334 00000252         Debug_Capture
  335 00000252 B43F            PUSH             {R0, R1, R2, R3, R4, R5}
  336 00000254 4823            LDR              R0, =NEntries
  337 00000256 6801            LDR              R1, [R0]
  338 00000258 2932            CMP              R1, #50
  339 0000025A D01D            BEQ              FIN
  340 0000025C         
  341 0000025C 481C            LDR              R0, =GPIO_PORTE_DATA_R
  342 0000025E 6801            LDR              R1, [R0]
  343 00000260 F001 0103       AND              R1, R1, #0x03
  344 00000264         
  345 00000264 4820            LDR              R0, =NVIC_ST_CURRENT_R
  346 00000266 6804            LDR              R4, [R0]
  347 00000268         
  348 00000268 EA4F 02C1       LSL              R2, R1, #3
  349 0000026C F002 0210       AND              R2, R2, #0x10
  350 00000270 F001 0101       AND              R1, R1, #0x01 ;prep data to be 
                                                            dumped
  351 00000274 4411            ADD              R1, R1, R2
  352 00000276         
  353 00000276 4819            LDR              R0, =DataPt
  354 00000278 6803            LDR              R3, [R0]    ;store data
  355 0000027A 7019            STRB             R1, [R3]
  356 0000027C         
  357 0000027C F103 0301       ADD              R3, R3, #1  ;increment DataPt
  358 00000280 6003            STR              R3, [R0]
  359 00000282         
  360 00000282 4817            LDR              R0, =TimePt
  361 00000284 6803            LDR              R3, [R0]    ;store Time
  362 00000286 601C            STR              R4, [R3]
  363 00000288         
  364 00000288 F103 0304       ADD              R3, R3, #4  ;increment TimePt
  365 0000028C 6003            STR              R3, [R0]
  366 0000028E         
  367 0000028E 4815            LDR              R0, =NEntries
  368 00000290 6801            LDR              R1, [R0]
  369 00000292 F101 0101       ADD              R1, R1, #1
  370 00000296 6001            STR              R1, [R0]
  371 00000298         
  372 00000298         FIN
  373 00000298 BC3F            POP              {R0, R1, R2, R3, R4, R5}
  374 0000029A 4770            BX               LR
  375 0000029C         
  376 0000029C                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  377 0000029C                 END                          ; end of file
              400FE608 
              40025520 
              4C4F434B 
              4002552C 
              40025524 
              40025400 
              4002551C 
              40025420 
              40025510 
              40024400 
              4002451C 
              40024420 



ARM Macro Assembler    Page 11 


              400253FC 
              400243FC 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              E000E018 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 50 in file main.s
   Uses
      None
Comment: DATA unused
DataBuffer 00000000

Symbol: DataBuffer
   Definitions
      At line 53 in file main.s
   Uses
      At line 303 in file main.s
      At line 322 in file main.s

DataPt 000000FA

Symbol: DataPt
   Definitions
      At line 55 in file main.s
   Uses
      At line 323 in file main.s
      At line 353 in file main.s

NEntries 00000102

Symbol: NEntries
   Definitions
      At line 57 in file main.s
   Uses
      At line 336 in file main.s
      At line 367 in file main.s

TimeBuffer 00000032

Symbol: TimeBuffer
   Definitions
      At line 54 in file main.s
   Uses
      At line 304 in file main.s
      At line 326 in file main.s

TimePt 000000FE

Symbol: TimePt
   Definitions
      At line 56 in file main.s
   Uses
      At line 327 in file main.s
      At line 360 in file main.s

6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 62 in file main.s
   Uses
      None
Comment: .text unused
ClearLoop 00000218

Symbol: ClearLoop
   Definitions
      At line 306 in file main.s
   Uses
      At line 319 in file main.s
Comment: ClearLoop used once
Debug_Capture 00000252

Symbol: Debug_Capture
   Definitions
      At line 334 in file main.s
   Uses
      At line 234 in file main.s
      At line 239 in file main.s
      At line 256 in file main.s

Debug_Init 0000020C

Symbol: Debug_Init
   Definitions
      At line 301 in file main.s
   Uses
      At line 121 in file main.s
Comment: Debug_Init used once
ExitClear 0000023C

Symbol: ExitClear
   Definitions
      At line 320 in file main.s
   Uses
      At line 308 in file main.s
Comment: ExitClear used once
FIN 00000298

Symbol: FIN
   Definitions
      At line 372 in file main.s
   Uses
      At line 339 in file main.s
Comment: FIN used once
NoCNo 00000196

Symbol: NoCNo
   Definitions
      At line 236 in file main.s
   Uses
      At line 233 in file main.s
Comment: NoCNo used once
Start 00000000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: Start
   Definitions
      At line 68 in file main.s
   Uses
      At line 64 in file main.s
Comment: Start used once
bottom 00000160

Symbol: bottom
   Definitions
      At line 212 in file main.s
   Uses
      At line 207 in file main.s
Comment: bottom used once
breathe 00000118

Symbol: breathe
   Definitions
      At line 184 in file main.s
   Uses
      At line 135 in file main.s
Comment: breathe used once
breathe1 0000012C

Symbol: breathe1
   Definitions
      At line 190 in file main.s
   Uses
      At line 221 in file main.s
Comment: breathe1 used once
delay 000001D0

Symbol: delay
   Definitions
      At line 262 in file main.s
   Uses
      At line 141 in file main.s
      At line 142 in file main.s
      At line 149 in file main.s
      At line 150 in file main.s
      At line 193 in file main.s
      At line 196 in file main.s

fin 00000166

Symbol: fin
   Definitions
      At line 215 in file main.s
   Uses
      At line 208 in file main.s
      At line 211 in file main.s
      At line 214 in file main.s

fullcycle 000000BE

Symbol: fullcycle
   Definitions
      At line 148 in file main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 146 in file main.s
Comment: fullcycle used once
increment 0000014C

Symbol: increment
   Definitions
      At line 201 in file main.s
   Uses
      At line 198 in file main.s
Comment: increment used once
loop 0000007E

Symbol: loop
   Definitions
      At line 122 in file main.s
   Uses
      At line 166 in file main.s
      At line 171 in file main.s
      At line 177 in file main.s
      At line 183 in file main.s
      At line 223 in file main.s

nocap 000001A4

Symbol: nocap
   Definitions
      At line 241 in file main.s
   Uses
      At line 238 in file main.s
Comment: nocap used once
nocap1 000001CA

Symbol: nocap1
   Definitions
      At line 258 in file main.s
   Uses
      At line 253 in file main.s
      At line 255 in file main.s

noduty 000000A4

Symbol: noduty
   Definitions
      At line 139 in file main.s
   Uses
      At line 137 in file main.s
Comment: noduty used once
notPressed 000000E8

Symbol: notPressed
   Definitions
      At line 167 in file main.s
   Uses
      At line 156 in file main.s
Comment: notPressed used once
reset 00000106

Symbol: reset



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 178 in file main.s
   Uses
      At line 174 in file main.s
Comment: reset used once
skp 00000150

Symbol: skp
   Definitions
      At line 203 in file main.s
   Uses
      At line 200 in file main.s
Comment: skp used once
sub1 000001E8

Symbol: sub1
   Definitions
      At line 278 in file main.s
   Uses
      At line 268 in file main.s
Comment: sub1 used once
toggleLightOff 000001AA

Symbol: toggleLightOff
   Definitions
      At line 245 in file main.s
   Uses
      At line 147 in file main.s
      At line 194 in file main.s

toggleLightOn 0000017C

Symbol: toggleLightOn
   Definitions
      At line 226 in file main.s
   Uses
      At line 138 in file main.s
      At line 191 in file main.s

top 0000015A

Symbol: top
   Definitions
      At line 209 in file main.s
   Uses
      At line 205 in file main.s
Comment: top used once
wait 000001F0

Symbol: wait
   Definitions
      At line 282 in file main.s
   Uses
      At line 284 in file main.s
Comment: wait used once
wait1 000001F4

Symbol: wait1
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 285 in file main.s
   Uses
      At line 287 in file main.s
Comment: wait1 used once
wait2 000001FE

Symbol: wait2
   Definitions
      At line 290 in file main.s
   Uses
      At line 292 in file main.s
Comment: wait2 used once
wait3 00000202

Symbol: wait3
   Definitions
      At line 293 in file main.s
   Uses
      At line 295 in file main.s
Comment: wait3 used once
while 000001D2

Symbol: while
   Definitions
      At line 266 in file main.s
   Uses
      At line 271 in file main.s
Comment: while used once
31 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 114 in file main.s
Comment: GPIO_PORTE_AFSEL_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 151 in file main.s
      At line 228 in file main.s
      At line 248 in file main.s
      At line 341 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 110 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 106 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 96 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 41 in file main.s
   Uses
      At line 85 in file main.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 123 in file main.s
      At line 130 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 216 in file main.s

GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 92 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 88 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 43 in file main.s
   Uses
      At line 78 in file main.s
      At line 81 in file main.s

GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 42 in file main.s
   Uses
      At line 83 in file main.s
Comment: GPIO_PORTF_PCTL_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 100 in file main.s
Comment: GPIO_PORTF_PUR_R used once
NVIC_ST_CTRL_R E000E010

Symbol: NVIC_ST_CTRL_R
   Definitions
      At line 46 in file main.s
   Uses
      None
Comment: NVIC_ST_CTRL_R unused
NVIC_ST_CURRENT_R E000E018

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 48 in file main.s
   Uses
      At line 345 in file main.s
Comment: NVIC_ST_CURRENT_R used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

NVIC_ST_RELOAD_R E000E014

Symbol: NVIC_ST_RELOAD_R
   Definitions
      At line 47 in file main.s
   Uses
      None
Comment: NVIC_ST_RELOAD_R unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 44 in file main.s
   Uses
      At line 72 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 60 in file main.s
   Uses
      At line 330 in file main.s
Comment: SysTick_Init used once
TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 59 in file main.s
   Uses
      At line 70 in file main.s
Comment: TExaS_Init used once
2 symbols
388 symbols in table
